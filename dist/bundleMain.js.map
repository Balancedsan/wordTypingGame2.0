{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/modal.js","webpack:///./js/timer.js","webpack:///./js/words.js","webpack:///./js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","modal","document","querySelector","trigger","closeButton","toggleModal","classList","toggle","addEventListener","window","event","target","timer","TimerTracker","time","timer_classCallCheck","this","_time","_clear","_initial","element","_this","Promise","resolve","reject","setInterval","clearInterval","res","textContent","concat","toPrecision","toString","length","console","log","generateWords","RandomChara","base","words_classCallCheck","_chara","_toConsumableArray","Set","join","_count","characters","oldCount","results","index","charAt","Math","floor","random","Error","displayContent","start","mainContent","replaceElement","gameStatus","wordInput","currentWord","stopButton","score","message","timeElement","startTimer","_ref","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","startCountDown","stop","_x","apply","arguments","startGame","_ref3","generateCharacters","_ref2","add","appendChild","Boolean"],"mappings":"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","file":"bundleMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const modalHandler = (()=>{\r\n\r\n    const modal = document.querySelector(\".modal\");\r\n    const trigger = document.querySelector(\".trigger\");\r\n    const closeButton = document.querySelector(\".close-button\");\r\n\r\n    /**\r\n     *  triggers the modal on and off\r\n     */\r\n    const toggleModal= ()=>{\r\n        modal.classList.toggle(\"show-modal\");\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param  event object by dom event listener\r\n     * \r\n     * check if the user has clicked on the modal when the modal is showing and it closes the modal \r\n     * \r\n     */\r\n    const windowOnClick  = (event)=>{\r\n        if (event.target === modal) {\r\n            toggleModal();\r\n        }\r\n    }\r\n\r\n    // 3 events to trigger the modal , when a button is clicked , modal is clicked and the close button is clicked \r\n    trigger.addEventListener(\"click\", toggleModal);\r\n    closeButton.addEventListener(\"click\", toggleModal);\r\n    window.addEventListener(\"click\", windowOnClick);\r\n\t\r\n})();\r\n\r\nexport default modalHandler;\r\n\r\n","\r\n/**\r\n * Use to keep track of the timer and display it to the user\r\n *\r\n */\r\nclass TimerTracker{\r\n    constructor(time){\r\n        this._time = time; // time in miliseconds \r\n        this._clear = false; // use to notify the timer to stop while the game resets \r\n        this._initial = time; // resets the timer when the timer resets\r\n    }\r\n\r\n    /**\r\n     * Starts the countdown timer and display the time on the html element\r\n     * @param element the dom element to display the timer to\r\n     * \r\n     */\r\n    startCountDown(element){\r\n        const promise = new Promise((resolve,reject)=>{\r\n        const timer= setInterval(()=> {\r\n                if(this._time <=0){\r\n                    clearInterval(timer);\r\n                    this._time = 0;\r\n                    resolve(this._time);\r\n                }\r\n          \r\n                if(this._clear){ // if anytime clear is set to true , stop the timer countdown and reset the initial values\r\n                    clearInterval(timer)\r\n                    this._clear = false;\r\n                    this._time = this._initial;\r\n                    resolve(this._time);\r\n                }\r\n     \r\n\r\n                this._time--;\r\n                let res = this._time > 0 ? this._time/100 : 0;\r\n                element.textContent = `${res.toPrecision(this._time.toString().length)}`;\r\n            },10)\r\n        })\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Stops the timer while the timer is counting down\r\n     */\r\n    clearTimer(){\r\n      this._clear = true;\r\n      console.log(this._clear);\r\n    }\r\n\r\n\r\n}     \r\n    \r\n\r\nexport const timer = new TimerTracker(500);\r\n    ","\r\n/**\r\n * Author: John Wee\r\n *\r\n * Description: This class is used to initialize the base character set and generate unique random characters for the user to key in \r\n *              , the class allows the base characters to be extended\r\n */\r\nclass RandomChara{\r\n    constructor(base){\r\n        this._chara = [...new Set(base)].join(\"\"); // ensure the random characters set initialized are all unique\r\n        this._count = this._chara.length; // counts the number of chara added\r\n    }\r\n\r\n    addCharacters(characters){\r\n        const oldCount = this._count;\r\n        this._chara = [...new Set(`${this._chara}${characters}`)].join(\"\");\r\n        this._count = this._chara.length;\r\n        return this._count > oldCount;\r\n    }\r\n\r\n    generateCharacters(length){\r\n        let results = \"\";\r\n        for(let index = 0; index < length; index++){\r\n              results += this._chara.charAt(Math.floor(Math.random() * this._chara.length));\r\n        }\r\n        return results;\r\n    }\r\n\r\n    get base(){\r\n          return this._chara\r\n    }\r\n\r\n\r\n    set base(characters){\r\n        if(characters.length > 1){\r\n           this._chara = [...new Set(characters)].join(\"\");\r\n        }else{\r\n           throw new Error(\"characters cannot be empty\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const generateWords = new RandomChara(\"abcdefghijklmopqrstuvwxyz1234567890\")\r\n\r\n\r\n\r\n\r\n","import modalHandler from \"./modal\";\r\nimport domCreate from \"./domCreate\";\r\nimport {timer} from \"./timer.js\";\r\nimport {generateWords} from \"./words.js\"\r\n\r\n\r\n// selectors to replace elements on the dom page\r\n\r\nconst displayContent = {\r\n    start: document.querySelector(\".box__start\"),\r\n    mainContent: document.querySelector(\".box__content\"),\r\n    replaceElement:document.querySelector(\".game-content--hidden\")\r\n}\r\n\r\n// gameStatus used to keep track of the game current state\r\n\r\nconst gameStatus = {\r\n    wordInput: document.querySelector(\".game-content__input\"),\r\n    currentWord:document.querySelector('.game-content__text'),\r\n    stopButton: document.querySelector(\".game-content__stop\"),\r\n    score: document.querySelector(\".game-info__score\"),\r\n    message: document.querySelector(\".game-content__message\"),\r\n    timeElement:document.querySelector(\".game-content__timer\")\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst checkLevelIncrement = (score,multipler)=>{\r\n    return score % multiplier === 0;\r\n}\r\n\r\nconst startTimer = async (element)=>{\r\n    const timeValue = timer.startCountDown(element);\r\n    if(timeValue > 1){\r\n        timer.startCountDown(element);\r\n    }else{\r\n        //TODO GAME OVER DISPLAYS MESSAGE TO THE USER\r\n    }\r\n\r\n}\r\n\r\nconst createWords = (length)=>{\r\n    return generateWords.generateCharacters(length);\r\n}\r\n\r\n\r\n\r\nconst replaceStart =({mainContent,replaceElement})=>{\r\n        replaceElement.classList.add(\"game-content--reveal\");\r\n        mainContent.textContent = \"\";\r\n        mainContent.appendChild(replaceElement);\r\n        return Boolean(mainContent.textContent); // return falsy value on message content to indicate start has been replaced\r\n}\r\n\r\nconst startGame = ({currentWord,timeElement})=>{\r\n        currentWord.textContent= createWords(8);\r\n        startTimer(timeElement.textContent);\r\n}\r\n\r\n\r\n// const gameStatus = {\r\n//     wordInput: document.querySelector(\".game-content__input\"),\r\n//     currentWord:document.querySelector('.game-content__text'),\r\n//     stopButton: document.querySelector(\".game-content__stop\"),\r\n//     score: document.querySelector(\".game-info__score\"),\r\n//     message: document.querySelector(\".game-content__message\"),\r\n//     timeElement:document.querySelector(\".game-content__timer\")\r\n// }\r\n\r\n\r\n\r\ndisplayContent.start.addEventListener(\"click\",()=>{\r\n       if(replaceStart(displayContent)){\r\n            startGame(gameStatus);\r\n       }\r\n});\r\n\r\n// const initializeGame = (currentWord,generator)=>{\r\n//     return (randomlength)=> {\r\n//        currentWord.textContent =  generator.generateCharacters(randomlength);\r\n//        return Boolean(currentWord.textContent);\r\n//     }\r\n// }\r\n\r\n// // used for generating random words onto the screen\r\n// const outputRandom = initializeGame(currentWord,generateWords);\r\n\r\n\r\n\r\n\r\n\r\n//     // start.addEventListener(\"click\",()=>{\r\n//     //     mainContent.innerHTML = \"\";\r\n//     //     mainContent.appendChild(newElement);\r\n//     //     const time = timer.countDownTimer(200,newElement,\"Game will start in\");\r\n\r\n//     //     time.then(()=>{\r\n//     //         replaceElement.classList.add(\"game-content--reveal\");\r\n//     //         mainContent.innerHTML =\"\";\r\n//     //         const timerGame = timer.countDownTimer(500,newElement,\"type the following words in\")\r\n//     //         mainContent.appendChild(replaceElement);\r\n//     //     })\r\n\r\n\r\n\r\n    //         /**\r\n    //  * Generates words for the user to type and display it on the screen\r\n    //  * \r\n    //  * @param length the length of word to be generated\r\n    //  * @param element the element to generate the newWord to\r\n    //  */\r\n    // const showWords = ((length,element)=>{\r\n    //     const newWord = wordGenerator.generateWords(length);\r\n    //     return newWord;\r\n    // })\r\n    // /**\r\n    //  * Checks if the current character on the screen matches the current character on the screen\r\n    //  * \r\n    //  */\r\n    // const matchWords =((message,wordInput,currentWord)=> {\r\n    //     message.textContent = wordInput.value === currentWord.textContent ? \"correct\" : \"\";  \r\n    //     return Boolean(message.textContent); // change output to falsy value to check if the word matches\r\n    // })\r\n\r\n\r\n// const mainFunc = ((domCreate)=>{\r\n\r\n//     const start = document.querySelector(\".box__start\");\r\n//     const mainContent = document.querySelector(\".box__content\");\r\n//     const newElement = domCreate.createElement(\"h1\",\"\",\"timer__heading\");\r\n//     const replaceElement = document.querySelector(\".game-content--hidden\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     // start.addEventListener(\"click\",()=>{\r\n//     //     mainContent.innerHTML = \"\";\r\n//     //     mainContent.appendChild(newElement);\r\n//     //     const time = timer.countDownTimer(200,newElement,\"Game will start in\");\r\n\r\n//     //     time.then(()=>{\r\n//     //         replaceElement.classList.add(\"game-content--reveal\");\r\n//     //         mainContent.innerHTML =\"\";\r\n//     //         const timerGame = timer.countDownTimer(500,newElement,\"type the following words in\")\r\n//     //         mainContent.appendChild(replaceElement);\r\n//     //     })\r\n\r\n   \r\n\r\n\r\n//     // })\r\n\r\n\r\n\r\n// })(domCreate);"],"sourceRoot":""}